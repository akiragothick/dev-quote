// <auto-generated />
using DevQuote.API.Models.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DevQuote.API.Migrations
{
    [DbContext(typeof(DevQuoteDBContext))]
    partial class DevQuoteDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DevQuote.API.Models.AssignProject", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("addProfessional")
                        .HasColumnType("bit");

                    b.Property<float>("addProfessionalReducedMonth")
                        .HasColumnType("real");

                    b.Property<int>("professionalId")
                        .HasColumnType("int");

                    b.Property<int>("professionalMonthQuantity")
                        .HasColumnType("int");

                    b.Property<int>("projectTypeMechanismId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("professionalId");

                    b.HasIndex("projectTypeMechanismId");

                    b.ToTable("tassignproject");
                });

            modelBuilder.Entity("DevQuote.API.Models.Professional", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("monthPay")
                        .HasColumnType("decimal(20,10)");

                    b.Property<string>("name")
                        .HasColumnType("varchar(100)");

                    b.HasKey("id");

                    b.ToTable("tprofessional");
                });

            modelBuilder.Entity("DevQuote.API.Models.ProjectType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name")
                        .HasColumnType("varchar(100)");

                    b.HasKey("id");

                    b.ToTable("tprojecttype");
                });

            modelBuilder.Entity("DevQuote.API.Models.ProjectTypeMechanism", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("devMonthsQuantity")
                        .HasColumnType("real");

                    b.Property<string>("name")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("projectTypeId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("projectTypeId");

                    b.ToTable("tprojecttypemechanism");
                });

            modelBuilder.Entity("DevQuote.API.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("email")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("password")
                        .HasColumnType("varchar(100)");

                    b.HasKey("id");

                    b.ToTable("tuser");
                });

            modelBuilder.Entity("DevQuote.API.Models.AssignProject", b =>
                {
                    b.HasOne("DevQuote.API.Models.Professional", "professional")
                        .WithMany("assignProjects")
                        .HasForeignKey("professionalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DevQuote.API.Models.ProjectTypeMechanism", "projectTypeMechanism")
                        .WithMany("assignProjects")
                        .HasForeignKey("projectTypeMechanismId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DevQuote.API.Models.ProjectTypeMechanism", b =>
                {
                    b.HasOne("DevQuote.API.Models.ProjectType", "projectType")
                        .WithMany("projectTypeMechanisms")
                        .HasForeignKey("projectTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
